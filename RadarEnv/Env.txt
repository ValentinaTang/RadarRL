Different types of jammers

Old:
Type 1: 干扰机每隔四个脉冲就进行一次look-through。如果雷达的第二个和第三个子脉冲的频点不同，将采用barrage jamming，直到下一次look-through
        否则，干扰机观测到的雷达第二个子脉冲的频点进行干扰
Type 2: 每4个脉冲，干扰机look through第一个，后面三个脉冲按照观测到的脉冲的第一个子脉的频点冲进行干扰
Type 3: 每八个脉冲，干扰器对前三个脉冲进行look-through(每个脉冲获取后两个子脉冲，共计6个子脉冲)，对第四个脉冲进行barrage jamming。对于接下来的四个脉冲，干扰器根据截获的雷达频点的概率分布进行定点干扰。

New:
在实际当中，干扰机停下接收信号所需的时间非常短，可以忽略。所以这里省略了干扰机不发出干扰这个时间。 （只是环境有变化，对你们的代码应该没有什么影响。）

Type 1: 干扰机每第四个cpi发射阻塞干扰，其余时候随机发射瞄频干扰
Type 2: 瞄频干扰，瞄准雷达当下脉冲的第一个子脉冲对应的频点 (一个pulse下干扰机只能够探测到第一个频点)
Type 3: 统计雷达历史频点，依统计概率在下个脉冲做瞄频干扰 
(代码里：只统计前两轮/前两个脉冲历史数据，即6个频点的数据，改的话需要改以下几处地方：
self.last_few_pulse = deque(maxlen=6)
if cpi == 0 or cpi == 1: 前两轮无历史数据，所以按照type2做动作
prob = np.array(num) / 6
temp_ = np.array(self.last_few_pulse).reshape(-1, 6)[0])

Note：新策略忽略了no jammer的情况，即第三层全是2
新环境id：RadarEnv-v4 (RadarEnv), RadarEnv-v4 (RadarEnvModel)
RadarEnv: set_jammer_type -> 更换radar策略 (可以在run_experiments.py直接调换策略)
RadarEnvModel: set_jammer_type -> 更换radar策略
                set_type -> 更换网络类型：默认网络类型为2，即输出为distribution

